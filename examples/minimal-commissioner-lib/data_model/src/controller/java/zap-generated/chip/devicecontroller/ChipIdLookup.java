/*
 *
 *    Copyright (c) 2022 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

package chip.devicecontroller;

public final class ChipIdLookup {
  /**
   * Translates cluster ID to a cluster name in upper camel case. If no matching ID is found,
   * returns an empty string.
   */
  public static String clusterIdToName(long clusterId) {
    if (clusterId == 3L) {
      return "Identify";
    }
    if (clusterId == 29L) {
      return "Descriptor";
    }
    if (clusterId == 31L) {
      return "AccessControl";
    }
    if (clusterId == 40L) {
      return "BasicInformation";
    }
    if (clusterId == 43L) {
      return "LocalizationConfiguration";
    }
    if (clusterId == 48L) {
      return "GeneralCommissioning";
    }
    if (clusterId == 49L) {
      return "NetworkCommissioning";
    }
    if (clusterId == 60L) {
      return "AdministratorCommissioning";
    }
    if (clusterId == 62L) {
      return "OperationalCredentials";
    }
    return "";
  }

  /**
   * Translates cluster ID and attribute ID to an attribute name in upper camel case. If no matching
   * IDs are found, returns an empty string.
   */
  public static String attributeIdToName(long clusterId, long attributeId) {
    if (clusterId == 3L) {
      if (attributeId == 0L) {
        return "IdentifyTime";
      }
      if (attributeId == 1L) {
        return "IdentifyType";
      }
      if (attributeId == 65528L) {
        return "GeneratedCommandList";
      }
      if (attributeId == 65529L) {
        return "AcceptedCommandList";
      }
      if (attributeId == 65530L) {
        return "EventList";
      }
      if (attributeId == 65531L) {
        return "AttributeList";
      }
      if (attributeId == 65532L) {
        return "FeatureMap";
      }
      if (attributeId == 65533L) {
        return "ClusterRevision";
      }
      return "";
    }
    if (clusterId == 29L) {
      if (attributeId == 0L) {
        return "DeviceTypeList";
      }
      if (attributeId == 1L) {
        return "ServerList";
      }
      if (attributeId == 2L) {
        return "ClientList";
      }
      if (attributeId == 3L) {
        return "PartsList";
      }
      if (attributeId == 65528L) {
        return "GeneratedCommandList";
      }
      if (attributeId == 65529L) {
        return "AcceptedCommandList";
      }
      if (attributeId == 65530L) {
        return "EventList";
      }
      if (attributeId == 65531L) {
        return "AttributeList";
      }
      if (attributeId == 65532L) {
        return "FeatureMap";
      }
      if (attributeId == 65533L) {
        return "ClusterRevision";
      }
      return "";
    }
    if (clusterId == 31L) {
      if (attributeId == 0L) {
        return "Acl";
      }
      if (attributeId == 1L) {
        return "Extension";
      }
      if (attributeId == 2L) {
        return "SubjectsPerAccessControlEntry";
      }
      if (attributeId == 3L) {
        return "TargetsPerAccessControlEntry";
      }
      if (attributeId == 4L) {
        return "AccessControlEntriesPerFabric";
      }
      if (attributeId == 65528L) {
        return "GeneratedCommandList";
      }
      if (attributeId == 65529L) {
        return "AcceptedCommandList";
      }
      if (attributeId == 65530L) {
        return "EventList";
      }
      if (attributeId == 65531L) {
        return "AttributeList";
      }
      if (attributeId == 65532L) {
        return "FeatureMap";
      }
      if (attributeId == 65533L) {
        return "ClusterRevision";
      }
      return "";
    }
    if (clusterId == 40L) {
      if (attributeId == 0L) {
        return "DataModelRevision";
      }
      if (attributeId == 1L) {
        return "VendorName";
      }
      if (attributeId == 2L) {
        return "VendorID";
      }
      if (attributeId == 3L) {
        return "ProductName";
      }
      if (attributeId == 4L) {
        return "ProductID";
      }
      if (attributeId == 5L) {
        return "NodeLabel";
      }
      if (attributeId == 6L) {
        return "Location";
      }
      if (attributeId == 7L) {
        return "HardwareVersion";
      }
      if (attributeId == 8L) {
        return "HardwareVersionString";
      }
      if (attributeId == 9L) {
        return "SoftwareVersion";
      }
      if (attributeId == 10L) {
        return "SoftwareVersionString";
      }
      if (attributeId == 11L) {
        return "ManufacturingDate";
      }
      if (attributeId == 12L) {
        return "PartNumber";
      }
      if (attributeId == 13L) {
        return "ProductURL";
      }
      if (attributeId == 14L) {
        return "ProductLabel";
      }
      if (attributeId == 15L) {
        return "SerialNumber";
      }
      if (attributeId == 16L) {
        return "LocalConfigDisabled";
      }
      if (attributeId == 17L) {
        return "Reachable";
      }
      if (attributeId == 18L) {
        return "UniqueID";
      }
      if (attributeId == 19L) {
        return "CapabilityMinima";
      }
      if (attributeId == 65528L) {
        return "GeneratedCommandList";
      }
      if (attributeId == 65529L) {
        return "AcceptedCommandList";
      }
      if (attributeId == 65530L) {
        return "EventList";
      }
      if (attributeId == 65531L) {
        return "AttributeList";
      }
      if (attributeId == 65532L) {
        return "FeatureMap";
      }
      if (attributeId == 65533L) {
        return "ClusterRevision";
      }
      return "";
    }
    if (clusterId == 43L) {
      if (attributeId == 0L) {
        return "ActiveLocale";
      }
      if (attributeId == 1L) {
        return "SupportedLocales";
      }
      if (attributeId == 65528L) {
        return "GeneratedCommandList";
      }
      if (attributeId == 65529L) {
        return "AcceptedCommandList";
      }
      if (attributeId == 65530L) {
        return "EventList";
      }
      if (attributeId == 65531L) {
        return "AttributeList";
      }
      if (attributeId == 65532L) {
        return "FeatureMap";
      }
      if (attributeId == 65533L) {
        return "ClusterRevision";
      }
      return "";
    }
    if (clusterId == 48L) {
      if (attributeId == 0L) {
        return "Breadcrumb";
      }
      if (attributeId == 1L) {
        return "BasicCommissioningInfo";
      }
      if (attributeId == 2L) {
        return "RegulatoryConfig";
      }
      if (attributeId == 3L) {
        return "LocationCapability";
      }
      if (attributeId == 4L) {
        return "SupportsConcurrentConnection";
      }
      if (attributeId == 65528L) {
        return "GeneratedCommandList";
      }
      if (attributeId == 65529L) {
        return "AcceptedCommandList";
      }
      if (attributeId == 65530L) {
        return "EventList";
      }
      if (attributeId == 65531L) {
        return "AttributeList";
      }
      if (attributeId == 65532L) {
        return "FeatureMap";
      }
      if (attributeId == 65533L) {
        return "ClusterRevision";
      }
      return "";
    }
    if (clusterId == 49L) {
      if (attributeId == 0L) {
        return "MaxNetworks";
      }
      if (attributeId == 1L) {
        return "Networks";
      }
      if (attributeId == 2L) {
        return "ScanMaxTimeSeconds";
      }
      if (attributeId == 3L) {
        return "ConnectMaxTimeSeconds";
      }
      if (attributeId == 4L) {
        return "InterfaceEnabled";
      }
      if (attributeId == 5L) {
        return "LastNetworkingStatus";
      }
      if (attributeId == 6L) {
        return "LastNetworkID";
      }
      if (attributeId == 7L) {
        return "LastConnectErrorValue";
      }
      if (attributeId == 65528L) {
        return "GeneratedCommandList";
      }
      if (attributeId == 65529L) {
        return "AcceptedCommandList";
      }
      if (attributeId == 65530L) {
        return "EventList";
      }
      if (attributeId == 65531L) {
        return "AttributeList";
      }
      if (attributeId == 65532L) {
        return "FeatureMap";
      }
      if (attributeId == 65533L) {
        return "ClusterRevision";
      }
      return "";
    }
    if (clusterId == 60L) {
      if (attributeId == 0L) {
        return "WindowStatus";
      }
      if (attributeId == 1L) {
        return "AdminFabricIndex";
      }
      if (attributeId == 2L) {
        return "AdminVendorId";
      }
      if (attributeId == 65528L) {
        return "GeneratedCommandList";
      }
      if (attributeId == 65529L) {
        return "AcceptedCommandList";
      }
      if (attributeId == 65530L) {
        return "EventList";
      }
      if (attributeId == 65531L) {
        return "AttributeList";
      }
      if (attributeId == 65532L) {
        return "FeatureMap";
      }
      if (attributeId == 65533L) {
        return "ClusterRevision";
      }
      return "";
    }
    if (clusterId == 62L) {
      if (attributeId == 0L) {
        return "NOCs";
      }
      if (attributeId == 1L) {
        return "Fabrics";
      }
      if (attributeId == 2L) {
        return "SupportedFabrics";
      }
      if (attributeId == 3L) {
        return "CommissionedFabrics";
      }
      if (attributeId == 4L) {
        return "TrustedRootCertificates";
      }
      if (attributeId == 5L) {
        return "CurrentFabricIndex";
      }
      if (attributeId == 65528L) {
        return "GeneratedCommandList";
      }
      if (attributeId == 65529L) {
        return "AcceptedCommandList";
      }
      if (attributeId == 65530L) {
        return "EventList";
      }
      if (attributeId == 65531L) {
        return "AttributeList";
      }
      if (attributeId == 65532L) {
        return "FeatureMap";
      }
      if (attributeId == 65533L) {
        return "ClusterRevision";
      }
      return "";
    }
    return "";
  }

  /**
   * Translates cluster ID and event ID to an attribute name in upper camel case. If no matching IDs
   * are found, returns an empty string.
   */
  public static String eventIdToName(long clusterId, long eventId) {
    if (clusterId == 3L) {
      return "";
    }
    if (clusterId == 29L) {
      return "";
    }
    if (clusterId == 31L) {
      if (eventId == 0L) {
        return "AccessControlEntryChanged";
      }
      if (eventId == 1L) {
        return "AccessControlExtensionChanged";
      }
      return "";
    }
    if (clusterId == 40L) {
      if (eventId == 0L) {
        return "StartUp";
      }
      if (eventId == 1L) {
        return "ShutDown";
      }
      if (eventId == 2L) {
        return "Leave";
      }
      if (eventId == 3L) {
        return "ReachableChanged";
      }
      return "";
    }
    if (clusterId == 43L) {
      return "";
    }
    if (clusterId == 48L) {
      return "";
    }
    if (clusterId == 49L) {
      return "";
    }
    if (clusterId == 60L) {
      return "";
    }
    if (clusterId == 62L) {
      return "";
    }
    return "";
  }
}
