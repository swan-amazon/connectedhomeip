/*
 *
 *    Copyright (c) 2022 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP
package chip.devicecontroller;

import javax.annotation.Nullable;

public class ChipEventStructs {
  public static class AccessControlClusterAccessControlEntryChangedEvent {
    public @Nullable Long adminNodeID;
    public @Nullable Integer adminPasscodeID;
    public Integer changeType;
    public @Nullable ChipStructs.AccessControlClusterAccessControlEntryStruct latestValue;
    public Integer fabricIndex;

    public AccessControlClusterAccessControlEntryChangedEvent(
        @Nullable Long adminNodeID,
        @Nullable Integer adminPasscodeID,
        Integer changeType,
        @Nullable ChipStructs.AccessControlClusterAccessControlEntryStruct latestValue,
        Integer fabricIndex) {
      this.adminNodeID = adminNodeID;
      this.adminPasscodeID = adminPasscodeID;
      this.changeType = changeType;
      this.latestValue = latestValue;
      this.fabricIndex = fabricIndex;
    }

    @Override
    public String toString() {
      StringBuilder output = new StringBuilder();
      output.append("AccessControlClusterAccessControlEntryChangedEvent {\n");
      output.append("\tadminNodeID: ");
      output.append(adminNodeID);
      output.append("\n");
      output.append("\tadminPasscodeID: ");
      output.append(adminPasscodeID);
      output.append("\n");
      output.append("\tchangeType: ");
      output.append(changeType);
      output.append("\n");
      output.append("\tlatestValue: ");
      output.append(latestValue);
      output.append("\n");
      output.append("\tfabricIndex: ");
      output.append(fabricIndex);
      output.append("\n");
      output.append("}\n");
      return output.toString();
    }
  }

  public static class AccessControlClusterAccessControlExtensionChangedEvent {
    public @Nullable Long adminNodeID;
    public @Nullable Integer adminPasscodeID;
    public Integer changeType;
    public @Nullable ChipStructs.AccessControlClusterAccessControlExtensionStruct latestValue;
    public Integer fabricIndex;

    public AccessControlClusterAccessControlExtensionChangedEvent(
        @Nullable Long adminNodeID,
        @Nullable Integer adminPasscodeID,
        Integer changeType,
        @Nullable ChipStructs.AccessControlClusterAccessControlExtensionStruct latestValue,
        Integer fabricIndex) {
      this.adminNodeID = adminNodeID;
      this.adminPasscodeID = adminPasscodeID;
      this.changeType = changeType;
      this.latestValue = latestValue;
      this.fabricIndex = fabricIndex;
    }

    @Override
    public String toString() {
      StringBuilder output = new StringBuilder();
      output.append("AccessControlClusterAccessControlExtensionChangedEvent {\n");
      output.append("\tadminNodeID: ");
      output.append(adminNodeID);
      output.append("\n");
      output.append("\tadminPasscodeID: ");
      output.append(adminPasscodeID);
      output.append("\n");
      output.append("\tchangeType: ");
      output.append(changeType);
      output.append("\n");
      output.append("\tlatestValue: ");
      output.append(latestValue);
      output.append("\n");
      output.append("\tfabricIndex: ");
      output.append(fabricIndex);
      output.append("\n");
      output.append("}\n");
      return output.toString();
    }
  }

  public static class BasicInformationClusterStartUpEvent {
    public Long softwareVersion;

    public BasicInformationClusterStartUpEvent(Long softwareVersion) {
      this.softwareVersion = softwareVersion;
    }

    @Override
    public String toString() {
      StringBuilder output = new StringBuilder();
      output.append("BasicInformationClusterStartUpEvent {\n");
      output.append("\tsoftwareVersion: ");
      output.append(softwareVersion);
      output.append("\n");
      output.append("}\n");
      return output.toString();
    }
  }

  public static class BasicInformationClusterShutDownEvent {

    public BasicInformationClusterShutDownEvent() {}

    @Override
    public String toString() {
      StringBuilder output = new StringBuilder();
      output.append("BasicInformationClusterShutDownEvent {\n");
      output.append("}\n");
      return output.toString();
    }
  }

  public static class BasicInformationClusterLeaveEvent {
    public Integer fabricIndex;

    public BasicInformationClusterLeaveEvent(Integer fabricIndex) {
      this.fabricIndex = fabricIndex;
    }

    @Override
    public String toString() {
      StringBuilder output = new StringBuilder();
      output.append("BasicInformationClusterLeaveEvent {\n");
      output.append("\tfabricIndex: ");
      output.append(fabricIndex);
      output.append("\n");
      output.append("}\n");
      return output.toString();
    }
  }

  public static class BasicInformationClusterReachableChangedEvent {
    public Boolean reachableNewValue;

    public BasicInformationClusterReachableChangedEvent(Boolean reachableNewValue) {
      this.reachableNewValue = reachableNewValue;
    }

    @Override
    public String toString() {
      StringBuilder output = new StringBuilder();
      output.append("BasicInformationClusterReachableChangedEvent {\n");
      output.append("\treachableNewValue: ");
      output.append(reachableNewValue);
      output.append("\n");
      output.append("}\n");
      return output.toString();
    }
  }
}
